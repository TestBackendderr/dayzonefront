import React, { useState } from 'react';
import './StalkerArchive.scss';

const StalkerArchive = () => {
  const [searchBy, setSearchBy] = useState('callsign');
  const [searchTerm, setSearchTerm] = useState('');

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞–ª–∫–µ—Ä–æ–≤
  const [stalkers] = useState([
    {
      id: 1,
      callsign: '–°–Ω–∞–π–ø–µ—Ä',
      fullName: '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á',
      faceId: 'ST001',
      note: '–û–ø—ã—Ç–Ω—ã–π —Å—Ç–∞–ª–∫–µ—Ä, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –¥–∞–ª—å–Ω–∏—Ö –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö',
      photo: 'https://via.placeholder.com/200x200/ff6b6b/ffffff?text=–°–Ω–∞–π–ø–µ—Ä'
    },
    {
      id: 2,
      callsign: '–í–æ–ª–∫',
      fullName: '–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á',
      faceId: 'ST002',
      note: '–ë—ã–≤—à–∏–π –≤–æ–µ–Ω–Ω—ã–π, –∑–Ω–∞–µ—Ç –∑–æ–Ω—É –∫–∞–∫ —Å–≤–æ–∏ –ø—è—Ç—å –ø–∞–ª—å—Ü–µ–≤',
      photo: 'https://via.placeholder.com/200x200/ee5a24/ffffff?text=–í–æ–ª–∫'
    },
    {
      id: 3,
      callsign: '–¢–µ–Ω—å',
      fullName: '–°–∏–¥–æ—Ä–æ–≤ –°–∏–¥–æ—Ä –°–∏–¥–æ—Ä–æ–≤–∏—á',
      faceId: 'ST003',
      note: '–ú–∞—Å—Ç–µ—Ä —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç–∏, —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ–¥–∏–Ω–æ—á–∫—É',
      photo: 'https://via.placeholder.com/200x200/2c3e50/ffffff?text=–¢–µ–Ω—å'
    },
    {
      id: 4,
      callsign: '–û—Ö–æ—Ç–Ω–∏–∫',
      fullName: '–ö–æ–∑–ª–æ–≤ –ö–æ–∑–µ–ª –ö–æ–∑–ª–æ–≤–∏—á',
      faceId: 'ST004',
      note: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞–º, –∏–º–µ–µ—Ç —Å–≤—è–∑–∏ —Å —É—á–µ–Ω—ã–º–∏',
      photo: 'https://via.placeholder.com/200x200/34495e/ffffff?text=–û—Ö–æ—Ç–Ω–∏–∫'
    }
  ]);

  const filteredStalkers = stalkers.filter(stalker => {
    if (!searchTerm) return true;
    
    if (searchBy === 'callsign') {
      return stalker.callsign.toLowerCase().includes(searchTerm.toLowerCase());
    } else if (searchBy === 'faceId') {
      return stalker.faceId.toLowerCase().includes(searchTerm.toLowerCase());
    } else if (searchBy === 'fullName') {
      return stalker.fullName.toLowerCase().includes(searchTerm.toLowerCase());
    }
    return true;
  });

  const handleSearchChange = (e) => {
    setSearchTerm(e.target.value);
  };

  const handleSearchTypeChange = (e) => {
    setSearchBy(e.target.value);
    setSearchTerm('');
  };

  return (
    <div className="stalker-archive">
      <div className="archive-header">
        <h2>–ê—Ä—Ö–∏–≤ —Å—Ç–∞–ª–∫–µ—Ä–æ–≤</h2>
        <p>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç–∞–ª–∫–µ—Ä–æ–≤ –∑–æ–Ω—ã</p>
      </div>

      <div className="search-section">
        <div className="search-controls">
          <div className="search-type">
            <label>–ü–æ–∏—Å–∫ –ø–æ:</label>
            <select value={searchBy} onChange={handleSearchTypeChange}>
              <option value="callsign">–ü–æ–∑—ã–≤–Ω–æ–º—É</option>
              <option value="faceId">ID –ª–∏—Ü–∞</option>
              <option value="fullName">–§–ò–û</option>
            </select>
          </div>
          
          <div className="search-input">
            <input
              type="text"
              placeholder={`–í–≤–µ–¥–∏—Ç–µ ${searchBy === 'callsign' ? '–ø–æ–∑—ã–≤–Ω–æ–π' : searchBy === 'faceId' ? 'ID –ª–∏—Ü–∞' : '–§–ò–û'} –¥–ª—è –ø–æ–∏—Å–∫–∞`}
              value={searchTerm}
              onChange={handleSearchChange}
            />
            <span className="search-icon">üîç</span>
          </div>
        </div>
      </div>

      <div className="stalkers-grid">
        {filteredStalkers.length > 0 ? (
          filteredStalkers.map(stalker => (
            <div key={stalker.id} className="stalker-card">
              <div className="stalker-photo">
                <img src={stalker.photo} alt={stalker.callsign} />
                <div className="radiation-overlay">‚ò¢</div>
              </div>
              
              <div className="stalker-info">
                <div className="stalker-callsign">
                  <span className="callsign-label">–ü–æ–∑—ã–≤–Ω–æ–π:</span>
                  <span className="callsign-value">{stalker.callsign}</span>
                </div>
                
                <div className="stalker-details">
                  <div className="detail-row">
                    <span className="detail-label">–§–ò–û:</span>
                    <span className="detail-value">{stalker.fullName}</span>
                  </div>
                  
                  <div className="detail-row">
                    <span className="detail-label">ID –ª–∏—Ü–∞:</span>
                    <span className="detail-value face-id">{stalker.faceId}</span>
                  </div>
                  
                  {stalker.note && (
                    <div className="detail-row note-row">
                      <span className="detail-label">–ó–∞–º–µ—Ç–∫–∞:</span>
                      <span className="detail-value note-text">{stalker.note}</span>
                    </div>
                  )}
                </div>
              </div>
              
              <div className="stalker-actions">
                <button className="action-btn edit-btn">
                  <span>‚úèÔ∏è</span>
                  –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                </button>
                <button className="action-btn delete-btn">
                  <span>üóëÔ∏è</span>
                  –£–¥–∞–ª–∏—Ç—å
                </button>
              </div>
            </div>
          ))
        ) : (
          <div className="no-results">
            <div className="no-results-icon">‚ò¢</div>
            <h3>–°—Ç–∞–ª–∫–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
            <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</p>
          </div>
        )}
      </div>
    </div>
  );
};

export default StalkerArchive;
