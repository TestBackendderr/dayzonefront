import React, { useState } from 'react';
import './IncomeExpense.scss';

const IncomeExpense = () => {
  const [showAddForm, setShowAddForm] = useState(false);
  const [newOperation, setNewOperation] = useState({
    type: '+',
    amount: '',
    currency: '—Ä—É–±–ª–∏',
    source: ''
  });

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
  const [operations] = useState([
    {
      id: 1,
      login: '–°–Ω–∞–π–ø–µ—Ä',
      type: '+',
      amount: 5000,
      currency: '—Ä—É–±–ª–∏',
      source: '–ü—Ä–æ–¥–∞–∂–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤'
    },
    {
      id: 2,
      login: '–í–æ–ª–∫',
      type: '-',
      amount: 1500,
      currency: '—Ä—É–±–ª–∏',
      source: '–ü–æ–∫—É–ø–∫–∞ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è'
    },
    {
      id: 3,
      login: '–¢–µ–Ω—å',
      type: '+',
      amount: 200,
      currency: '$',
      source: '–ó–∞–∫–∞–∑ –Ω–∞ —Ä–∞–∑–≤–µ–¥–∫—É'
    },
    {
      id: 4,
      login: '–û—Ö–æ—Ç–Ω–∏–∫',
      type: '-',
      amount: 3000,
      currency: '—Ä—É–±–ª–∏',
      source: '–†–µ–º–æ–Ω—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è'
    },
    {
      id: 5,
      login: '–°–Ω–∞–π–ø–µ—Ä',
      type: '+',
      amount: 800,
      currency: '$',
      source: '–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –∑–∞–¥–∞–Ω–∏–µ'
    }
  ]);

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setNewOperation(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:', newOperation);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    alert('–û–ø–µ—Ä–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞!');
    setNewOperation({
      type: '+',
      amount: '',
      currency: '—Ä—É–±–ª–∏',
      source: ''
    });
    setShowAddForm(false);
  };

  const toggleAddForm = () => {
    setShowAddForm(!showAddForm);
  };

  return (
    <div className="income-expense">
      <div className="income-expense-header">
        <h2>–ü—Ä–∏—Ö–æ–¥-—Ä–∞—Å—Ö–æ–¥</h2>
        <p>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏ —Å—Ç–∞–ª–∫–µ—Ä–æ–≤</p>
      </div>

      <div className="recent-operations">
        <h3>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏</h3>
        <div className="operations-list">
          {operations.map(operation => (
            <div key={operation.id} className={`operation-item ${operation.type === '+' ? 'income' : 'expense'}`}>
              <div className="operation-login">
                <span className="login-name">{operation.login}</span>
              </div>
              <div className="operation-amount">
                <span className={`amount-sign ${operation.type === '+' ? 'positive' : 'negative'}`}>
                  {operation.type}
                </span>
                <span className="amount-value">{operation.amount}</span>
                <span className="amount-currency">{operation.currency}</span>
              </div>
              <div className="operation-source">
                <span className="source-text">{operation.source}</span>
              </div>
            </div>
          ))}
        </div>
      </div>

      <div className="add-operation-section">
        <button className="add-operation-btn" onClick={toggleAddForm}>
          <span className="btn-icon">üí∞</span>
          <span>–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏—Ö–æ–¥-—Ä–∞—Å—Ö–æ–¥</span>
        </button>

        {showAddForm && (
          <div className="add-operation-form">
            <form onSubmit={handleSubmit}>
              <div className="form-row">
                <div className="form-group">
                  <label>–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏</label>
                  <div className="type-buttons">
                    <button
                      type="button"
                      className={`type-btn ${newOperation.type === '+' ? 'active' : ''}`}
                      onClick={() => setNewOperation(prev => ({ ...prev, type: '+' }))}
                    >
                      <span className="type-icon">+</span>
                      –ü—Ä–∏—Ö–æ–¥
                    </button>
                    <button
                      type="button"
                      className={`type-btn ${newOperation.type === '-' ? 'active' : ''}`}
                      onClick={() => setNewOperation(prev => ({ ...prev, type: '-' }))}
                    >
                      <span className="type-icon">-</span>
                      –†–∞—Å—Ö–æ–¥
                    </button>
                  </div>
                </div>

                <div className="form-group">
                  <label>–°—É–º–º–∞</label>
                  <input
                    type="number"
                    name="amount"
                    value={newOperation.amount}
                    onChange={handleInputChange}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É"
                    required
                  />
                </div>

                <div className="form-group">
                  <label>–í–∞–ª—é—Ç–∞</label>
                  <select
                    name="currency"
                    value={newOperation.currency}
                    onChange={handleInputChange}
                  >
                    <option value="—Ä—É–±–ª–∏">–†—É–±–ª–∏</option>
                    <option value="$">–î–æ–ª–ª–∞—Ä—ã</option>
                  </select>
                </div>
              </div>

              <div className="form-group">
                <label>–ò—Å—Ç–æ—á–Ω–∏–∫</label>
                <input
                  type="text"
                  name="source"
                  value={newOperation.source}
                  onChange={handleInputChange}
                  placeholder="–£–∫–∞–∂–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ –æ–ø–µ—Ä–∞—Ü–∏–∏"
                  required
                />
              </div>

              <div className="form-actions">
                <button type="button" className="btn-cancel" onClick={() => setShowAddForm(false)}>
                  –û—Ç–º–µ–Ω–∞
                </button>
                <button type="submit" className="btn-submit">
                  <span className="btn-icon">‚ò¢</span>
                  –î–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é
                </button>
              </div>
            </form>
          </div>
        )}
      </div>
    </div>
  );
};

export default IncomeExpense;

