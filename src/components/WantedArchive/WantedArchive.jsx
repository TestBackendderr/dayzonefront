import React, { useState, useEffect } from 'react';
import { wantedAPI } from '../../services/api';
import LeftSide from '../LeftSide/LeftSide';
import './WantedArchive.scss';

const WantedArchive = () => {
  const [searchBy, setSearchBy] = useState('callsign');
  const [searchTerm, setSearchTerm] = useState('');
  const [wantedStalkers, setWantedStalkers] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞–∑—ã—Å–∫–∏–≤–∞–µ–º—ã—Ö —Å—Ç–∞–ª–∫–µ—Ä–æ–≤ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    loadWantedStalkers();
  }, []);

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞–∑—ã—Å–∫–∏–≤–∞–µ–º—ã—Ö —Å—Ç–∞–ª–∫–µ—Ä–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–∏—Å–∫–∞
  useEffect(() => {
    const timeoutId = setTimeout(() => {
      loadWantedStalkers();
    }, 500); // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞

    return () => clearTimeout(timeoutId);
  }, [searchBy, searchTerm]);

  const loadWantedStalkers = async () => {
    try {
      setLoading(true);
      setError('');
      const response = await wantedAPI.getAll(searchBy, searchTerm);
      setWantedStalkers(response.wanted || []);
    } catch (error) {
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑—ã —Ä–æ–∑—ã—Å–∫–∞: ' + (error.response?.data?.message || error.message));
      setWantedStalkers([]);
    } finally {
      setLoading(false);
    }
  };

  const handleSearchChange = (e) => {
    setSearchTerm(e.target.value);
  };

  const handleSearchTypeChange = (e) => {
    setSearchBy(e.target.value);
    setSearchTerm('');
  };

  const handleDeleteWanted = async (id) => {
    if (!window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ–≥–æ —Ä–∞–∑—ã—Å–∫–∏–≤–∞–µ–º–æ–≥–æ —Å—Ç–∞–ª–∫–µ—Ä–∞?')) {
      return;
    }

    try {
      await wantedAPI.delete(id);
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—ã—Å–∫–∏–≤–∞–µ–º—ã—Ö —Å—Ç–∞–ª–∫–µ—Ä–æ–≤
      loadWantedStalkers();
      alert('–†–∞–∑—ã—Å–∫–∏–≤–∞–µ–º—ã–π —Å—Ç–∞–ª–∫–µ—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω');
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ' + (error.response?.data?.message || error.message));
    }
  };

  return (
    <div className="wanted-archive">
      <LeftSide />
      <div className="archive-header">
        <h2>–ë–∞–∑–∞ —Ä–æ–∑—ã—Å–∫–∞</h2>
        <p>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤—Å–µ—Ö —Ä–∞–∑—ã—Å–∫–∏–≤–∞–µ–º—ã—Ö —Å—Ç–∞–ª–∫–µ—Ä–æ–≤ –∑–æ–Ω—ã</p>
      </div>

      {error && (
        <div className="error-message">
          <span className="error-icon">‚ö†Ô∏è</span>
          {error}
        </div>
      )}

      <div className="search-section">
        <div className="search-controls">
          <div className="search-type">
            <label>–ü–æ–∏—Å–∫ –ø–æ:</label>
            <select value={searchBy} onChange={handleSearchTypeChange}>
              <option value="callsign">–ü–æ–∑—ã–≤–Ω–æ–º—É</option>
              <option value="faceId">ID –ª–∏—Ü–∞</option>
              <option value="fullName">–§–ò–û</option>
            </select>
          </div>
          
          <div className="search-input">
            <input
              type="text"
              placeholder={`–í–≤–µ–¥–∏—Ç–µ ${searchBy === 'callsign' ? '–ø–æ–∑—ã–≤–Ω–æ–π' : searchBy === 'faceId' ? 'ID –ª–∏—Ü–∞' : '–§–ò–û'} –¥–ª—è –ø–æ–∏—Å–∫–∞`}
              value={searchTerm}
              onChange={handleSearchChange}
            />
            <span className="search-icon">üîç</span>
          </div>
        </div>
      </div>

      <div className="wanted-grid">
        {loading ? (
          <div className="loading-message">
            <div className="loading-spinner">‚ò¢</div>
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã —Ä–æ–∑—ã—Å–∫–∞...</p>
          </div>
        ) : wantedStalkers && wantedStalkers.length > 0 ? (
          wantedStalkers.map(wanted => (
            <div key={wanted.id} className="wanted-card">
              <div className="wanted-photo">
                <img 
                  src={wanted.photo || 'https://via.placeholder.com/200x200/ff6b6b/ffffff?text=' + encodeURIComponent(wanted.callsign)} 
                  alt={wanted.callsign} 
                />
                <div className="radiation-overlay">‚ò¢</div>
                <div className="wanted-badge">–†–ê–ó–´–°–ö–ò–í–ê–ï–¢–°–Ø</div>
              </div>
              
              <div className="wanted-info">
                <div className="wanted-callsign">
                  <span className="callsign-label">–ü–æ–∑—ã–≤–Ω–æ–π:</span>
                  <span className="callsign-value">{wanted.callsign}</span>
                </div>
                
                <div className="wanted-details">
                  <div className="detail-row">
                    <span className="detail-label">–§–ò–û:</span>
                    <span className="detail-value">{wanted.full_name}</span>
                  </div>
                  
                  <div className="detail-row">
                    <span className="detail-label">ID –ª–∏—Ü–∞:</span>
                    <span className="detail-value face-id">{wanted.face_id}</span>
                  </div>
                  
                  <div className="detail-row">
                    <span className="detail-label">–ù–∞–≥—Ä–∞–¥–∞:</span>
                    <span className="detail-value reward">{wanted.reward} —Ä—É–±.</span>
                  </div>
                  
                  <div className="detail-row">
                    <span className="detail-label">–ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –≤–∏–¥–µ–ª–∏:</span>
                    <span className="detail-value">{wanted.last_seen}</span>
                  </div>
                  
                  {wanted.reason && (
                    <div className="detail-row note-row">
                      <span className="detail-label">–ü—Ä–∏—á–∏–Ω–∞ —Ä–æ–∑—ã—Å–∫–∞:</span>
                      <span className="detail-value note-text">{wanted.reason}</span>
                    </div>
                  )}
                </div>
              </div>
              
              <div className="wanted-actions">
                <button className="action-btn edit-btn">
                  <span>‚úèÔ∏è</span>
                  –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                </button>
                <button 
                  className="action-btn delete-btn"
                  onClick={() => handleDeleteWanted(wanted.id)}
                >
                  <span>üóëÔ∏è</span>
                  –£–¥–∞–ª–∏—Ç—å
                </button>
              </div>
            </div>
          ))
        ) : (
          <div className="no-results">
            <div className="no-results-icon">‚ò¢</div>
            <h3>–†–∞–∑—ã—Å–∫–∏–≤–∞–µ–º—ã–µ —Å—Ç–∞–ª–∫–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
            <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</p>
          </div>
        )}
      </div>
    </div>
  );
};

export default WantedArchive;
